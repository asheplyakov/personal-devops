---

- name: install required software on Debian
  package: name={{ item }} state=present
  loop:
    - msmtp-mta
    - mutt
    - notmuch-mutt
    - offlineimap
    - openssl
  when: ansible_os_family == 'Debian'
  become: true

- name: install required software on ALT Linux
  package: name={{ item }} state=present
  loop:
    - msmtp
    - msmtp-sendmail
    - mutt
    - notmuch-mutt
    - offlineimap
    - openssl
  when: ansible_distribution_file_path == '/etc/altlinux-release'
  become: true

- set_fact:
    config_dir: "{{ lookup('env', 'HOME') }}/.config"
    cache_dir: "{{ lookup('env', 'HOME') }}/.cache"
    email_dir: "{{ lookup('env', 'HOME') }}/Private/mail/basealt"
    basealt_email_user: "{{ lookup('env', 'USER') }}"

- set_fact:
    offlineimap_dir: "{{ config_dir }}/offlineimap"
    mutt_dir: "{{ config_dir }}/mutt"
    msmtp_dir: "{{ config_dir }}/msmtp"
    notmuch_dir: "{{ config_dir }}/notmuch"

- set_fact:
    mutt_has_sidebar: false
  when: ansible_distribution_file_path == '/etc/altlinux-release'

- name: figure out real name of user
  shell: >
    getent passwd {{ basealt_email_user }} | cut -d':' -f5 | sed -re 's/,.*$//'
  register: email_user_getent_realname
  changed_when: False

- set_fact:
    basealt_email_realname: "{{ email_user_getent_realname.stdout.strip() }}"
  when: basealt_email_realname is undefined

- set_fact:
    basealt_email_full: "{{ basealt_email_realname }} <{{ basealt_email_user }}@basealt.ru>"
  when: basealt_email_full is undefined

- name: figure out server certificate fingerprint
  shell: >
    msmtp --serverinfo --host={{ basealt_smtp_server }} --tls=on --tls-certcheck=off | 
    sed -rne  's/^\s*SHA256:\s*([0-9a-fA-F:]+)\s*$/\1/p'
  register: smtp_cert_fingerprint
  when: basealt_smtp_server_cert_fingerprint is undefined

- set_fact:
    basealt_smtp_server_cert_fingerprint: "{{ smtp_cert_fingerprint.stdout.strip() }}"
  when: basealt_smtp_server_cert_fingerprint is undefined

- name: create msmtp config dir
  file:
    state: directory
    path: "{{ msmtp_dir }}"
    mode: 0755

- name: generate msmtp config file
  template:
    src: ./templates/msmtp.config.j2
    dest: "{{ msmtp_dir }}/config"
    mode: 0644

- name: create email directory
  file:
    path: "{{ email_dir }}"
    state: directory
    mode: 0755

- name: figure out IMAP server certificate
  shell: >
    openssl s_client -connect {{ basealt_imap_server }}:{{ basealt_imap_port }} </dev/null |
    sed -rne '/^-----BEGIN CERTIFICATE-----/,/^-----END CERTIFICATE-----/p' |
    openssl x509 -noout -in - -fingerprint -sha512 |
    sed -rne 's/^SHA512 Fingerprint=([0-9a-fA-F:]+)\s*$/\1/p' |
    tr -d ':' |
    tr '[A-F]' '[a-f]'
  register: imap_server_cert_fingerprint
  when: basealt_imap_server_cert_fingerprint is undefined

- set_fact:
    basealt_imap_server_cert_fingerprint: "{{ imap_server_cert_fingerprint.stdout.strip() }}"
  when: basealt_imap_server_cert_fingerprint is undefined

- name: create offlineimap config directory
  file:
    path: "{{ offlineimap_dir }}"
    state: directory
    mode: 0755

- name: create offlineimap config
  template:
    src: ./templates/offlineimap.conf.j2
    dest: "{{ offlineimap_dir }}/offlineimap.conf"
    mode: 0644

- name: install offlineimap python code
  copy:
    src: ./files/offlineimap.py
    dest: "{{ offlineimap_dir }}/offlineimap.py"
    mode: 0644


- name: create mutt config directory
  file:
    path: "{{ mutt_dir }}"
    state: directory
    mode: 0755

- name: install mutt config file
  template:
    src: ./templates/muttrc.j2
    dest: "{{ mutt_dir }}/muttrc"
    mode: 0644

- name: create notmuch config dir
  file:
    path: "{{ notmuch_dir }}"
    state: directory
    mode: 0755

- name: generate notmuch config file
  template:
    src: ./templates/notmuch.config.j2
    dest: "{{ notmuch_dir }}/config"
    mode: 0644

- name: create notmuch cache dir
  file:
    path: "{{ cache_dir }}/notmuch/mutt"
    state: directory
    mode: 0755

- name: configure git user info, step 1/4
  command: >
    git config --global --get --default '' user.name
  register: git_config_user_name_out
  changed_when: False

- name: configure git user info, step 2/4
  command: >
    git config --global --get --default '' user.email
  register: git_config_user_email_out
  changed_when: False

- name: configure git user info, step 3/4
  command: >
    git config --global user.email "{{ basealt_email }}"
  when:
    - basealt_email != git_config_user_email_out.stdout.strip()
  vars:
    - basealt_email: "{{ basealt_email_user }}@basealt.ru"

- name: configure git user info, step 4/4
  command: >
    git config --global user.name "{{ basealt_email_realname }}"
  when:
    - basealt_email_realname != git_config_user_email_out.stdout.strip()

- name: configure git-send-email, step 1/12
  command: >
    git config --global --get --default '' sendemail.smtpServer
  register: git_config_sendemail_smtpServer_out
  changed_when: False

- name: configure git-send-email, step 2/12
  command: >
    git config --global sendemail.smtpServer {{ basealt_smtp_server }}
  when:
    - basealt_smtp_server != git_config_sendemail_smtpServer_out.stdout.strip()

- name: configure git-send-email, step 3/12
  command: >
    git config --global --get --default '' sendemail.smtpUser
  register: git_config_sendemail_smtpUser_out
  changed_when: False

- name: configure git-send-email, step 4/12
  command: >
    git config --global sendemail.smtpUser {{ basealt_email_user }}
  when:
    - basealt_email_user != git_config_sendemail_smtpUser_out.stdout.strip()

- name: configure git-send-email, step 5/12
  command: >
    git config --global --get --default '' sendemail.from
  register: git_config_sendemail_from_out
  changed_when: False

- name: configure git-send-email, step 6/12
  command: >
    git config --global sendemail.from "{{ basealt_email_full }}"
  when:
    - basealt_email_full != git_config_sendemail_from_out.stdout.strip()

- name: configure git-send-email, step 7/12
  command: >
    git config --global --get --default '' sendemail.smtpEncryption
  register: git_config_sendemail_smtpEncryption_out
  changed_when: False

- name: configure git-send-email, step 8/10
  command: >
    git config --global sendemail.smtpEncryption tls
  when:
    - git_config_sendemail_smtpEncryption_out.stdout.strip() != 'tls'

- name: configure git-send-email, step 9/12
  command: >
    git config --global --get --default '' sendemail.smtpServerPort
  register: git_config_sendemail_smtpServerPort_out
  changed_when: False

- name: configure git-send-email, step 10/12
  command: >
    git config --global sendemail.smtpServerPort {{ basealt_smtp_alt_port }}
  when:
    - git_config_sendemail_smtpServerPort_out.stdout.strip() != basealt_smtp_alt_port|string
