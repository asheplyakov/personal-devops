---

- name: install distcc
  package: name=distcc state=present
  become: true

- name: install distccd on ALT Linux
  package: name=distcc-server state=present
  when:
    - ansible_distribution_file_path == '/etc/altlinux-release'
  become: true

- name: install rsync
  package: name=rsync state=present
  become: true

- name: install distcc unit file
  template:
    src: templates/distccd.service.j2
    dest: /etc/systemd/system/distccd.service
    owner: root
    group: root
    mode: 0644
  notify:
    - kick systemd
  become: true

- name: create distccd log file
  file:
    path: "{{ distccd_log_dir }}/distccd.log"
    state: touch
    access_time: preserve
    owner: distccd
    group: adm
    mode: 0640
  become: true

- name: force notified handlers to run
  meta: flush_handlers

- name: copy local distcc installation
  synchronize:
    src: "{{ distcc_local_prefix }}/"
    dest: "{{ distcc_local_prefix }}/"
    checksum: true
    archive: true
    rsync_opts:
      - '--one-file-system'
    verify_host: yes
  notify:
    - restart distccd
  when:
    - not(distcc_use_distro_package)
  become: true

- name: install native C compiler
  package: name={{ item }} state=present
  with_items:
    - gcc
  notify: restart distccd
  become: true

- name: install native C++ compiler on Debian
  package: name={{ item }} state=present
  with_items:
    - g++
  notify: restart distccd
  when:
    - ansible_os_family == 'Debian'
  become: true

- name: install native C++ compiler on ALT/Fedora/RHEL
  package: name={{ item }} state=present
  with_items:
    - gcc-c++
  notify: restart distccd
  when:
    - ansible_os_family != 'Debian'
  become: true

- name: install C cross-compilers
  package: name=gcc-{{ item }} state=present
  with_items: "{{ cross_toolchains }}"
  notify: restart distccd
  become: true

- name: configure distcc allowed nets
  lineinfile:
    path: /etc/default/distcc
    create: true
    line: "ALLOWEDNETS=\"{{ distccd_allowed_nets|join(' ') }}\""
    regexp: "^ALLOWEDNETS=.*"
  become: true
  notify: restart distccd

- name: set interfaces listened by distccd
  lineinfile:
    path: /etc/default/distcc
    line: "LISTENER=\"{{ distccd_listen|default(['0.0.0.0'])|join(' ') }}\""
    regexp: "^LISTENER=.*"
  become: true
  notify: restart distccd

- name: enable starting distccd
  lineinfile:
    path: /etc/default/distcc
    line: 'STARTDISTCC="true"'
    regexp: "^STARTDISTCC.*"
  become: true
  notify: restart distccd

- name: enable distccd service
  service:
    name: distccd
    enabled: true
    state: started
  become: true
