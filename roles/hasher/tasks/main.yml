---

- name: install mkimage and friends
  apt_rpm: pkg={{ item }} state=present
  with_items:
    - mkimage
    - mkimage-preinstall
    - hasher
    - git-core
  notify: apply sysctl.d knobs
  become: true

- name: enable /proc in hasher chroots
  lineinfile:
    dest: /etc/hasher-priv/system
    line: "allowed_mountpoints=/proc"
    state: present
  become: true

- name: lift hsh-run timeout
  lineinfile:
    dest: /etc/hasher-priv/system
    line: "wlimit_time_elapsed=86400"
    state: present
  become: true

- name: create user
  user:
    name: "{{ hasher_user }}"
    state: present
  become: true
  when: hasher_user is defined

- name: check if user is already in hasher group
  command: >
    getent passwd {{ hasher_user }}_a
  register: user_a_getent
  failed_when: False
  changed_when: False
  when: hasher_user is defined

- name: remove stale /etc/hasher-priv/user.d config
  file:
    path: "/etc/hasher-priv/user.d/{{ hasher_user }}"
    state: absent
  when:
    - hasher_user is defined
    - user_a_getent.rc|default(0) != 0
  become: true
- name: add user to hasher group
  command: hasher-useradd {{ hasher_user }}
  become: true
  when:
    - hasher_user is defined
    - user_a_getent.rc|default(0) != 0
- name: add user to wheel group
  user:
    name: "{{ hasher_user }}"
    groups: wheel
    append: true
  become: true
  when:
    - hasher_user is defined
    - hasher_enable_wheel|default(true)|bool

- name: enable passwordless sudo for user
  copy:
    dest: "/etc/sudoers.d/{{ hasher_user }}"
    owner: root
    group: root
    mode: 0600
    content: "{{ hasher_user }} ALL=(ALL) NOPASSWD: ALL"
  become: true
  when:
    - hasher_user is defined
    - hasher_enable_nopasswd_sudo|default(true)|bool

- name: find out hasher_user home directory
  shell: >
    getent passwd {{ hasher_user }} | cut -d ':' -f 6
  register: hasher_user_home_out
  changed_when: False

- set_fact:
    hasher_user_home: "{{ hasher_user_home_out.stdout_lines[0] }}"
    hasher_config: "{{ hasher_user_home_out.stdout_lines[0] }}/.hasher/config"

- name: ensure ~/.hasher directory exists
  file:
    dest: "{{ hasher_config|dirname }}"
    state: directory
    owner: "{{ hasher_user }}"
    mode: 0755
  become: true

- name: ensure ~/hasher directory exists
  file:
    dest: "{{ hasher_user_home }}/hasher"
    state: directory
    owner: "{{ hasher_user }}"
    group: "{{ hasher_user }}"
    mode: 0775
  become: true

- name: check if ~/.hasher/config exists
  stat:
    path: "{{ hasher_config }}"
  register: hasher_config_stat
  failed_when: False
  changed_when: False
  become:  true

- name: create ~/.hasher/config
  template:
    dest: "{{ hasher_config }}"
    src: ./templates/hasher-config.j2
    owner: "{{ hasher_user }}"
    mode: 0644
  when:
    - not(hasher_config_stat.stat.exists)
    - maintainer is defined
  become: true

- name: set packager in ~/.hasher/config
  lineinfile:
    path: "{{ hasher_config }}"
    regexp: '^packager[=]'
    line: "packager=\"{{ maintainer.name }} <{{ maintainer.email }}>\""
    owner: "{{ hasher_user }}"
    mode: 0644
  when:
    - hasher_config_stat.stat.exists
    - maintainer is defined
  become: true

- include_tasks: qemu-user.yml
  when: arch != ansible_architecture
  loop: "{{ crossbuild_arch }}"
  loop_control:
    loop_var: arch
